{"version":3,"file":"static/js/657.8a730947.chunk.js","mappings":"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","sources":["webpack://alanominator/./src/pages/authPages/authPages.module.scss?c19d","webpack://alanominator/./src/components/UI/FormButton/FormButton.module.scss?0755","components/UI/FormButton/FormButton.jsx","webpack://alanominator/./src/components/UI/FormInput/FormInput.module.scss?3c58","components/UI/FormInput/FormInput.jsx","hooks/useFetching.ts","webpack://alanominator/./src/pages/authPages/ActivateUserPage/ActivateUserPage.module.scss?807d","pages/authPages/ActivateUserPage/ActivateUserPage.tsx","pages/authPages/funcs.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"errorMessageWrapper\":\"authPages_errorMessageWrapper__1nb9r\",\"errorMessage\":\"authPages_errorMessage__cn6Eo\",\"form_wrapper\":\"authPages_form_wrapper__I9-Yl\",\"form\":\"authPages_form__mwH6E\",\"page_name\":\"authPages_page_name__-ata5\",\"lw\":\"authPages_lw__b9ZJ1\",\"ttl\":\"authPages_ttl__KbgBc\",\"link\":\"authPages_link__ll6x-\",\"help_link\":\"authPages_help_link__VMlan\",\"help_wrapper\":\"authPages_help_wrapper__4ETRw\",\"reCaptcha_wrapper\":\"authPages_reCaptcha_wrapper__bduQh\",\"captcha_loading\":\"authPages_captcha_loading__YQc+l\",\"captcha_loading_message\":\"authPages_captcha_loading_message__mjU5w\",\"cancelBtnWrapper\":\"authPages_cancelBtnWrapper__ey8-O\",\"cancelBtn\":\"authPages_cancelBtn__undoL\"};","// extracted by mini-css-extract-plugin\nexport default {\"button_wrapper\":\"FormButton_button_wrapper__K6Ek-\",\"button\":\"FormButton_button__saLZQ\"};","import React from 'react';\nimport cl from './FormButton.module.scss';\n\nfunction FormButton(props) {\n\n    const { children, disabled } = props\n\n    return (\n        <div className={cl.button_wrapper}>\n            <button\n                className={`${cl.button} button`}\n                type='submit'\n                disabled={disabled}\n                {...props}\n            >\n                {children}\n            </button>\n        </div>\n    )\n}\n\nexport default FormButton","// extracted by mini-css-extract-plugin\nexport default {\"input_main_wrapper\":\"FormInput_input_main_wrapper__ujvJw\",\"input_field\":\"FormInput_input_field__QYl9j\",\"label\":\"FormInput_label__04RR4\",\"input\":\"FormInput_input__uBaqY\",\"label_active\":\"FormInput_label_active__6tHVz\",\"red_message\":\"FormInput_red_message__1EyIk\"};","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport cl from './FormInput.module.scss';\n\n\nfunction FormInput(props) {\n    const { label, name, placeholder, hasError, value, touched, ...rest } = props\n\n    return (\n        <div\n            className={`${cl.input_main_wrapper} input_main_wrapper`}\n        >\n\n            <div\n                className={cl.input_field}\n            >\n                <label\n                    htmlFor={name}\n                    className={`${`${cl.label} label`} ${value && `${cl.label_active} label_active`}`}\n                >\n                    {placeholder}\n                </label>\n                <Field\n                    className={`${`${cl.input} input`} ${hasError ? `${cl.has_errors} has_errors` : touched && `${cl.correct} correct`}`}\n                    as=\"input\"\n                    id={name}\n                    name={name}\n                    {...rest}\n                />\n            </div>\n\n            <span className={`${cl.red_message} red_message`}>\n                <ErrorMessage name={name} />\n            </span>\n\n        </div>\n    )\n}\n\nexport default FormInput;","import { useState } from \"react\";\n\nexport const useFetching = (callback: Function) => {\n    const [Loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n\n    const fetching = async (...args: any) => {\n        try {\n            setLoading(true)\n            await callback(...args)\n        } catch (e: any) { // TODO type error\n            setError(e.message)\n        } finally {\n            setLoading(false)\n        }\n    }\n\n    return [fetching, Loading, error] as const\n}","// extracted by mini-css-extract-plugin\nexport default {\"btns_wrapper\":\"ActivateUserPage_btns_wrapper__NUKZL\",\"cancelRegistrationBtn\":\"ActivateUserPage_cancelRegistrationBtn__AIYMw\"};","import React, { useState } from 'react'\nimport * as Yup from 'yup';\nimport { Formik, Form } from 'formik'\nimport { useFetching } from '../../../hooks/useFetching';\nimport axios from 'axios';\nimport { basic_url } from '../../../API/APISettings';\nimport FormButton from '../../../components/UI/FormButton/FormButton';\nimport FormInput from '../../../components/UI/FormInput/FormInput';\nimport { useNavigate } from 'react-router-dom';\nimport { store } from '../../../reducers/index';\nimport { LOGIN_SUCCESS, LOGIN_FAIL } from '../../../reducers/auth';\nimport { isEmpty } from '../funcs';\nimport m from '../authPages.module.scss';\nimport cl from './ActivateUserPage.module.scss';\nimport Loader from '../../../components/UI/Loader/Loader';\nimport { useTranslation } from 'react-i18next';\nimport { useAlert } from 'react-alert';\n\n\n// TODO timer\n\n\nfunction LoginPage() {\n\n    const alert = useAlert()\n\n    const { t } = useTranslation()\n\n    const navigate = useNavigate()\n\n    if (!localStorage.getItem(\"email\")) {\n        navigate(\"/register\")\n    }\n\n    const initialValues = {\n        activation_password: ''\n    }\n\n\n\n    const validationSchema = Yup.object().shape({\n        activation_password: Yup.string()\n            .required(t('main_content.pages.auth_pages.required', \"required\"))\n            .length(5)\n    })\n\n    const [responseError, setResponseError] = useState<string | null>(\"\")\n\n    let smthww = t('main_content.pages.auth_pages.smthww', \"something went wrong. Try again.\")\n\n    const [activateAccount, LoadingActivateAccount] = useFetching(async (values: any) => {\n        const body = {\n            \"email\": localStorage.getItem(\"email\"),\n            \"activation_password\": values.activation_password\n        };\n\n        await axios.post(`${basic_url}/users/activate_account/`, body, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => {\n                store.dispatch({\n                    type: LOGIN_SUCCESS,\n                    payload: res.data,\n                });\n                alert.success(res.data.message)\n                localStorage.removeItem(\"email\")\n                localStorage.removeItem(\"password\")\n                navigate(\"/\")\n            })\n            .catch(err => {\n                if (err.response) {\n                    setResponseError(err.response.data.message)\n                } else {\n                    setResponseError(smthww)\n                }\n\n                store.dispatch({\n                    type: LOGIN_FAIL,\n                    payload: \"Network error\"\n                });\n            });\n    })\n\n    const [cancelingRegistration, LoadingCancelingRegistration] = useFetching(async () => {\n        const body = {\n            \"email\": localStorage.getItem(\"email\"),\n            \"password\": localStorage.getItem(\"password\")\n        };\n\n        await axios.post(`${basic_url}/users/cancel_registration/`, body, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => {\n                alert.success(res.data.message)\n\n                localStorage.removeItem(\"email\")\n                localStorage.removeItem(\"password\")\n                navigate(\"/\")\n            })\n            .catch(err => {\n                if (err.response) {\n                    setResponseError(err.response.data.message)\n                } else {\n                    setResponseError(smthww)\n                }\n                store.dispatch({\n                    type: LOGIN_FAIL,\n                    payload: \"Network error\"\n                });\n            });\n    })\n\n    // const [time, setTimeUntil] = useState(null)\n\n    // const runTimeUntil = (s) => {\n\n    //     do {\n    //         setTimeout(() => {\n    //             setTimeUntil(Number(s))\n    //             console.log(time)\n    //         }, 1000)\n    //     } while (time > 1)\n\n    // }\n\n    const [resendingActivationPassword, LoadingResendingActivationPassword] = useFetching(async () => {\n        const body = {\n            \"email\": localStorage.getItem(\"email\"),\n            \"password\": localStorage.getItem(\"password\")\n        };\n\n        await axios.post(`${basic_url}/users/resend_activation_password/`, body, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => {\n                alert.success(res.data.message)\n                setResponseError(null)\n            })\n            .catch(err => {\n                if (err.response) {\n                    setResponseError(err.response.data.message)\n\n                    // runTimeUntil(err.response.data.seconds_until)\n\n                    console.log(Number(err.response.data.seconds_until))\n\n                } else {\n                    setResponseError(smthww)\n                }\n\n                store.dispatch({\n                    type: LOGIN_FAIL,\n                    payload: \"Network error\"\n                });\n            });\n    })\n\n    function onSubmit(values: object) {\n        activateAccount(values)\n    }\n\n    function cancelRegistration() {\n        cancelingRegistration()\n    }\n\n    function resendActivationPassword() {\n        resendingActivationPassword()\n    }\n\n    let activate_account_text = t('main_content.pages.auth_pages.activate_account', \"activate account\")\n\n    return (\n        <>\n            {(LoadingActivateAccount || LoadingCancelingRegistration || LoadingResendingActivationPassword) &&\n                <div className='loader_wrapper'>\n                    <Loader />\n                </div>\n            }\n\n            {responseError &&\n                <div className={m.errorMessageWrapper}>\n                    <span className={`${m.errorMessage} errorMessage`}>\n                        {responseError}\n                    </span>\n                </div>\n            }\n\n            <div className={m.form_wrapper}>\n                <Formik\n                    initialValues={initialValues}\n                    validationSchema={validationSchema}\n                    onSubmit={onSubmit}\n                >\n                    {({ errors, touched, values }) => (\n                        <Form\n                            className={m.form}\n                        >\n                            <b className={`${m.page_name} auth_page_name`}>\n                                {activate_account_text}\n                            </b>\n\n                            <FormInput\n                                name=\"activation_password\"\n                                placeholder={activate_account_text}\n                                type=\"password\"\n                                autoFocus={true}\n                                pattern=\"[0-9]*\"\n                                inputMode=\"numeric\"\n\n                                value={values[\"activation_password\"]}\n                                touched={touched[\"activation_password\"]}\n                                hasError={errors[\"activation_password\"]}\n                            />\n\n                            <div className={cl.btns_wrapper}> {/* //  */}\n                                <FormButton\n                                    disabled={\n                                        LoadingActivateAccount ||\n                                        !(isEmpty(errors))\n                                    }\n                                    type=\"submit\"\n                                >\n                                    {activate_account_text}\n                                </FormButton>\n\n                                <span className={cl.cancelRegistrationBtn} onClick={cancelRegistration}>\n                                    {t('main_content.pages.auth_pages.cancel_registration', \"cancel registration\")}\n                                </span>\n\n                                <span className={cl.cancelRegistrationBtn} onClick={resendActivationPassword}>\n                                    {t('main_content.pages.auth_pages.rap', \"resend activation password\")}\n                                </span>\n\n                            </div>\n                        </Form>\n                    )}\n                </Formik>\n            </div>\n\n\n        </>\n    )\n}\n\nexport default LoginPage;","export function isEmpty(obj) {\n    return Object.keys(obj).length === 0 && obj.constructor === Object\n}"],"names":["props","children","disabled","className","cl","type","label","name","placeholder","hasError","value","touched","rest","htmlFor","as","id","useFetching","callback","useState","Loading","setLoading","error","setError","fetching","message","alert","useAlert","t","useTranslation","navigate","useNavigate","localStorage","getItem","validationSchema","Yup","shape","activation_password","required","length","responseError","setResponseError","smthww","values","body","axios","basic_url","headers","then","res","store","LOGIN_SUCCESS","payload","data","success","removeItem","catch","err","response","LOGIN_FAIL","activateAccount","LoadingActivateAccount","cancelingRegistration","LoadingCancelingRegistration","console","log","Number","seconds_until","resendingActivationPassword","LoadingResendingActivationPassword","cancelRegistration","resendActivationPassword","activate_account_text","Loader","m","initialValues","onSubmit","errors","FormInput","autoFocus","pattern","inputMode","FormButton","isEmpty","onClick","obj","Object","keys","constructor"],"sourceRoot":""}